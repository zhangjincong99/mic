{"ast":null,"code":"export default {\n  data() {\n    return {\n      ranking: [],\n      songListId: 'YOUR_SONG_LIST_ID' // 替换为你的歌单 ID\n    };\n  },\n\n  mounted() {\n    this.getRankingOfSongList();\n  },\n  methods: {\n    async getRankingOfSongList() {\n      try {\n        const response = await this.getRankOfSongListId(this.songListId);\n        this.ranking = response.data;\n        this.sortRankingByRank();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getRankOfSongListId(songListId) {\n      // 发起 HTTP 请求获取指定歌单的评分\n      // 假设你已经设置了网络请求库，可以使用该库的方法进行请求\n      const response = await axios.get(`/rankList?songListId=${songListId}`);\n      return response.data;\n    },\n    sortRankingByRank() {\n      // 按照评分进行排序\n      this.ranking.sort((a, b) => b.rank - a.rank);\n    }\n  }\n};","map":{"version":3,"names":["data","ranking","songListId","mounted","getRankingOfSongList","methods","response","getRankOfSongListId","sortRankingByRank","error","console","axios","get","sort","a","b","rank"],"sources":["E:\\javaideaiu\\class22\\mic\\music-client\\src\\views\\song-sheet\\paihangbang.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>歌单评分排行榜</h2>\r\n    <ul>\r\n      <li v-for=\"(item, index) in ranking\" :key=\"item.rank\">\r\n        {{ index + 1 }}. 用户ID: {{ item.consumerId }}，评分: {{ item.rank }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      ranking: [],\r\n      songListId: 'YOUR_SONG_LIST_ID', // 替换为你的歌单 ID\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getRankingOfSongList();\r\n  },\r\n  methods: {\r\n    async getRankingOfSongList() {\r\n      try {\r\n        const response = await this.getRankOfSongListId(this.songListId);\r\n        this.ranking = response.data;\r\n        this.sortRankingByRank();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    async getRankOfSongListId(songListId) {\r\n      // 发起 HTTP 请求获取指定歌单的评分\r\n      // 假设你已经设置了网络请求库，可以使用该库的方法进行请求\r\n      const response = await axios.get(`/rankList?songListId=${songListId}`);\r\n      return response.data;\r\n    },\r\n    sortRankingByRank() {\r\n      // 按照评分进行排序\r\n      this.ranking.sort((a, b) => b.rank - a.rank);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAYA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE,mBAAmB,CAAE;IACnC,CAAC;EACH,CAAC;;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,oBAAoB,CAAC,CAAC;EAC7B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,oBAAoBA,CAAA,EAAG;MAC3B,IAAI;QACF,MAAME,QAAO,GAAI,MAAM,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACL,UAAU,CAAC;QAChE,IAAI,CAACD,OAAM,GAAIK,QAAQ,CAACN,IAAI;QAC5B,IAAI,CAACQ,iBAAiB,CAAC,CAAC;MAC1B,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACD,MAAMF,mBAAmBA,CAACL,UAAU,EAAE;MACpC;MACA;MACA,MAAMI,QAAO,GAAI,MAAMK,KAAK,CAACC,GAAG,CAAE,wBAAuBV,UAAW,EAAC,CAAC;MACtE,OAAOI,QAAQ,CAACN,IAAI;IACtB,CAAC;IACDQ,iBAAiBA,CAAA,EAAG;MAClB;MACA,IAAI,CAACP,OAAO,CAACY,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,IAAG,GAAIF,CAAC,CAACE,IAAI,CAAC;IAC9C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}