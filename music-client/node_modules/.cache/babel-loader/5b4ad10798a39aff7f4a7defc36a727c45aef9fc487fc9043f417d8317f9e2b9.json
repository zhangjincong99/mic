{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { HttpManager } from \"@/api\";\nexport default {\n  data() {\n    return {\n      ranking: []\n    };\n  },\n  async created() {\n    try {\n      // 获取全部歌单\n      const songLists = await HttpManager.getSongList();\n\n      // 遍历每个歌单\n      for (const songList of songLists) {\n        // 获取歌单的评分\n        const rank = await HttpManager.getRankOfSongListId(songList.id);\n\n        // 计算歌单的平均评分\n        const totalScore = rank.reduce((sum, r) => sum + r.score, 0);\n        const averageScore = totalScore / rank.length;\n\n        // 将歌单和平均评分加入排行榜数组\n        this.ranking.push({\n          songList,\n          averageScore\n        });\n      }\n\n      // 根据平均评分对歌单进行排序\n      this.ranking.sort((a, b) => b.averageScore - a.averageScore);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }\n};","map":{"version":3,"names":["HttpManager","data","ranking","created","songLists","getSongList","songList","rank","getRankOfSongListId","id","totalScore","reduce","sum","r","score","averageScore","length","push","sort","a","b","error","console"],"sources":["E:\\javaideaiu\\class22\\mic\\music-client\\src\\views\\song-sheet\\paihangbang.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>歌单评分排行榜</h2>\r\n    <ul>\r\n      <li v-for=\"(item, index) in ranking\" :key=\"item.songList.id\">\r\n        {{ index + 1 }}. 歌单名: {{ item.songList.name }}, 平均评分: {{ item.averageScore }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { HttpManager } from \"@/api\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      ranking: []\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      // 获取全部歌单\r\n      const songLists = await HttpManager.getSongList();\r\n\r\n      // 遍历每个歌单\r\n      for (const songList of songLists) {\r\n        // 获取歌单的评分\r\n        const rank = await HttpManager.getRankOfSongListId(songList.id);\r\n\r\n        // 计算歌单的平均评分\r\n        const totalScore = rank.reduce((sum, r) => sum + r.score, 0);\r\n        const averageScore = totalScore / rank.length;\r\n\r\n        // 将歌单和平均评分加入排行榜数组\r\n        this.ranking.push({ songList, averageScore });\r\n      }\r\n\r\n      // 根据平均评分对歌单进行排序\r\n      this.ranking.sort((a, b) => b.averageScore - a.averageScore);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";AAYA,SAASA,WAAU,QAAS,OAAO;AAEnC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF;MACA,MAAMC,SAAQ,GAAI,MAAMJ,WAAW,CAACK,WAAW,CAAC,CAAC;;MAEjD;MACA,KAAK,MAAMC,QAAO,IAAKF,SAAS,EAAE;QAChC;QACA,MAAMG,IAAG,GAAI,MAAMP,WAAW,CAACQ,mBAAmB,CAACF,QAAQ,CAACG,EAAE,CAAC;;QAE/D;QACA,MAAMC,UAAS,GAAIH,IAAI,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAE,GAAIC,CAAC,CAACC,KAAK,EAAE,CAAC,CAAC;QAC5D,MAAMC,YAAW,GAAIL,UAAS,GAAIH,IAAI,CAACS,MAAM;;QAE7C;QACA,IAAI,CAACd,OAAO,CAACe,IAAI,CAAC;UAAEX,QAAQ;UAAES;QAAa,CAAC,CAAC;MAC/C;;MAEA;MACA,IAAI,CAACb,OAAO,CAACgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACL,YAAW,GAAII,CAAC,CAACJ,YAAY,CAAC;IAC9D,EAAE,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}