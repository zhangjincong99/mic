{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      rankList: [{\n        id: 1,\n        songListId: 2,\n        consumerId: 2,\n        score: 1\n      }, {\n        id: 2,\n        songListId: 2,\n        consumerId: 2,\n        score: 2\n      }, {\n        id: 3,\n        songListId: 1,\n        consumerId: 1,\n        score: 4\n      }, {\n        id: 7,\n        songListId: 13,\n        consumerId: 1,\n        score: 5\n      }, {\n        id: 19,\n        songListId: 21,\n        consumerId: 1,\n        score: 5\n      }, {\n        id: 20,\n        songListId: 31,\n        consumerId: 1,\n        score: 5\n      }, {\n        id: 21,\n        songListId: 5,\n        consumerId: 1,\n        score: 0\n      }, {\n        id: 24,\n        songListId: 11,\n        consumerId: 1,\n        score: 4\n      }, {\n        id: 25,\n        songListId: 10,\n        consumerId: 1,\n        score: 10\n      }, {\n        id: 27,\n        songListId: 6,\n        consumerId: 1,\n        score: 6\n      }, {\n        id: 28,\n        songListId: 7,\n        consumerId: 1,\n        score: 10\n      }, {\n        id: 29,\n        songListId: 1,\n        consumerId: 26,\n        score: 4\n      }, {\n        id: 30,\n        songListId: 7,\n        consumerId: 26,\n        score: 2\n      }, {\n        id: 32,\n        songListId: 3,\n        consumerId: 26,\n        score: 5\n      }, {\n        id: 33,\n        songListId: 14,\n        consumerId: 26,\n        score: 9\n      }],\n      songRankings: []\n    };\n  },\n  mounted() {\n    this.calculateRankings();\n  },\n  methods: {\n    calculateRankings() {\n      // 按照歌单 ID 进行分组\n      const groupBySongList = this.rankList.reduce((acc, item) => {\n        const songListId = item.songListId;\n        if (!acc[songListId]) {\n          acc[songListId] = [];\n        }\n        acc[songListId].push(item);\n        return acc;\n      }, {});\n\n      // 计算每个歌单的平均分数\n      const averageScores = Object.keys(groupBySongList).map(songListId => {\n        const ratings = groupBySongList[songListId].map(item => item.score);\n        const averageScore = ratings.reduce((sum, score) => sum + score, 0) / ratings.length;\n        return {\n          songListId,\n          averageScore\n        };\n      });\n\n      // 按照平均分数降序排序\n      averageScores.sort((a, b) => b.averageScore - a.averageScore);\n\n      // 获取歌单标题等信息（此处为示例数据，实际应从API获取）\n      const songListDetails = {\n        2: {\n          title: '歌单2'\n        },\n        1: {\n          title: '歌单1'\n        },\n        13: {\n          title: '歌单13'\n        },\n        21: {\n          title: '歌单21'\n        },\n        31: {\n          title: '歌单31'\n        },\n        5: {\n          title: '歌单5'\n        },\n        11: {\n          title: '歌单11'\n        },\n        10: {\n          title: '歌单10'\n        },\n        6: {\n          title: '歌单6'\n        },\n        7: {\n          title: '歌单7'\n        },\n        3: {\n          title: '歌单3'\n        },\n        14: {\n          title: '歌单14'\n        }\n      };\n\n      // 组装最终的排行榜数据\n      this.songRankings = averageScores.map((item, index) => {\n        const songListId = item.songListId;\n        const title = songListDetails[songListId].title;\n        const score = item.averageScore.toFixed(1);\n        return {\n          title,\n          score\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","rankList","id","songListId","consumerId","score","songRankings","mounted","calculateRankings","methods","groupBySongList","reduce","acc","item","push","averageScores","Object","keys","map","ratings","averageScore","sum","length","sort","a","b","songListDetails","title","index","toFixed"],"sources":["E:\\javaideaiu\\class22\\mic\\music-client\\src\\views\\paihangbang.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>歌单评分排行榜</h1>\r\n      <ul>\r\n        <li v-for=\"(item, index) in songRankings\" :key=\"index\">\r\n          <span>{{ index + 1 }}</span>\r\n          <span>{{ item.title }}</span>\r\n          <span>{{ item.score }}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        rankList: [\r\n          { id: 1, songListId: 2, consumerId: 2, score: 1 },\r\n          { id: 2, songListId: 2, consumerId: 2, score: 2 },\r\n          { id: 3, songListId: 1, consumerId: 1, score: 4 },\r\n          { id: 7, songListId: 13, consumerId: 1, score: 5 },\r\n          { id: 19, songListId: 21, consumerId: 1, score: 5 },\r\n          { id: 20, songListId: 31, consumerId: 1, score: 5 },\r\n          { id: 21, songListId: 5, consumerId: 1, score: 0 },\r\n          { id: 24, songListId: 11, consumerId: 1, score: 4 },\r\n          { id: 25, songListId: 10, consumerId: 1, score: 10 },\r\n          { id: 27, songListId: 6, consumerId: 1, score: 6 },\r\n          { id: 28, songListId: 7, consumerId: 1, score: 10 },\r\n          { id: 29, songListId: 1, consumerId: 26, score: 4 },\r\n          { id: 30, songListId: 7, consumerId: 26, score: 2 },\r\n          { id: 32, songListId: 3, consumerId: 26, score: 5 },\r\n          { id: 33, songListId: 14, consumerId: 26, score: 9 },\r\n        ],\r\n        songRankings: [],\r\n      };\r\n    },\r\n    mounted() {\r\n      this.calculateRankings();\r\n    },\r\n    methods: {\r\n      calculateRankings() {\r\n        // 按照歌单 ID 进行分组\r\n        const groupBySongList = this.rankList.reduce((acc, item) => {\r\n          const songListId = item.songListId;\r\n          if (!acc[songListId]) {\r\n            acc[songListId] = [];\r\n          }\r\n          acc[songListId].push(item);\r\n          return acc;\r\n        }, {});\r\n  \r\n        // 计算每个歌单的平均分数\r\n        const averageScores = Object.keys(groupBySongList).map((songListId) => {\r\n          const ratings = groupBySongList[songListId].map((item) => item.score);\r\n          const averageScore = ratings.reduce((sum, score) => sum + score, 0) / ratings.length;\r\n          return { songListId, averageScore };\r\n        });\r\n  \r\n        // 按照平均分数降序排序\r\n        averageScores.sort((a, b) => b.averageScore - a.averageScore);\r\n  \r\n        // 获取歌单标题等信息（此处为示例数据，实际应从API获取）\r\n        const songListDetails = {\r\n          2: { title: '歌单2' },\r\n          1: { title: '歌单1' },\r\n          13: { title: '歌单13' },\r\n          21: { title: '歌单21' },\r\n          31: { title: '歌单31' },\r\n          5: { title: '歌单5' },\r\n          11: { title: '歌单11' },\r\n          10: { title: '歌单10' },\r\n          6: { title: '歌单6' },\r\n          7: { title: '歌单7' },\r\n          3: { title: '歌单3' },\r\n          14: { title: '歌单14' },\r\n        };\r\n  \r\n        // 组装最终的排行榜数据\r\n        this.songRankings = averageScores.map((item, index) => {\r\n          const songListId = item.songListId;\r\n          const title = songListDetails[songListId].title;\r\n          const score = item.averageScore.toFixed(1);\r\n          return { title, score };\r\n        });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  h1 {\r\n    font-size: 24px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  ul {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  li {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  span:first-child {\r\n    margin-right: 10px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  span:last-child {\r\n    margin-left: auto;\r\n  }\r\n  </style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}