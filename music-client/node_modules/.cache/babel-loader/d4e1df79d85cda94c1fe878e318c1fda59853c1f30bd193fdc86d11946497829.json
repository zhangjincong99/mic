{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"歌单评分排行榜\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.rankingList, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.songListId\n    }, \" Rank \" + _toDisplayString(index + 1) + \": \" + _toDisplayString(item.title) + \", Average Score: \" + _toDisplayString(item.averageScore), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","rankingList","item","index","key","songListId","_toDisplayString","title","averageScore"],"sources":["E:\\javaideaiu\\class22\\mic\\music-client\\src\\views\\song-sheet\\paihangbang.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>歌单评分排行榜</h1>\r\n    <ul>\r\n      <li v-for=\"(item, index) in rankingList\" :key=\"item.songListId\">\r\n        Rank {{ index + 1 }}: {{ item.title }}, Average Score: {{ item.averageScore }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { HttpManager } from \"@/api\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      rankingList: [],\r\n    };\r\n  },\r\n  async created() {\r\n    await this.getRankingList();\r\n  },\r\n  methods: {\r\n    // 获取歌单评分排行榜\r\n    async getRankingList() {\r\n      const songListData = await HttpManager.getSongList();\r\n      const rankingList = [];\r\n\r\n      for (const songList of songListData) {\r\n        const rankData = await HttpManager.getRankOfSongListId(songList.id);\r\n        const averageScore = this.calculateAverageScore(rankData);\r\n        rankingList.push({ songListId: songList.id, title: songList.title, averageScore });\r\n      }\r\n\r\n      // 根据平均评分进行排序\r\n      rankingList.sort((a, b) => b.averageScore - a.averageScore);\r\n\r\n      this.rankingList = rankingList;\r\n    },\r\n    // 计算平均评分\r\n    calculateAverageScore(rankData) {\r\n      let sum = 0;\r\n      for (const rank of rankData) {\r\n        sum += rank.score;\r\n      }\r\n      return sum / rankData.length;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";gCAEIA,mBAAA,CAAgB,YAAZ,SAAO;;;uBADbC,mBAAA,CAOM,cANJC,UAAgB,EAChBF,mBAAA,CAIK,c,kBAHHC,mBAAA,CAEKE,SAAA,QAAAC,WAAA,CAFuBC,KAAA,CAAAC,WAAW,GAA3BC,IAAI,EAAEC,KAAK;yBAAvBP,mBAAA,CAEK;MAFqCQ,GAAG,EAAEF,IAAI,CAACG;OAAY,QACzD,GAAAC,gBAAA,CAAGH,KAAK,QAAO,IAAE,GAAAG,gBAAA,CAAGJ,IAAI,CAACK,KAAK,IAAG,mBAAiB,GAAAD,gBAAA,CAAGJ,IAAI,CAACM,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}