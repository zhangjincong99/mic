{"ast":null,"code":"export default {\n  data() {\n    return {\n      rankList: [[1, 2, 1, 7], [2, 2, 2, 3], [3, 1, 1, 4], [7, 13, 1, 5], [19, 21, 1, 5], [20, 31, 1, 5], [21, 5, 1, 0], [24, 11, 1, 4], [25, 10, 1, 10], [27, 6, 1, 6], [28, 7, 1, 10], [29, 1, 26, 4], [30, 7, 26, 2], [32, 3, 26, 5], [33, 14, 26, 9]],\n      songRankings: []\n    };\n  },\n  mounted() {\n    this.calculateRankings();\n  },\n  methods: {\n    calculateRankings() {\n      const averageScores = this.rankList.map(item => {\n        const songListId = item[1];\n        const score = item[3];\n        return {\n          songListId,\n          score\n        };\n      });\n      averageScores.sort((a, b) => b.score - a.score);\n      const songListDetails = {\n        2: {\n          title: '歌单2'\n        },\n        1: {\n          title: '歌单1'\n        },\n        13: {\n          title: '歌单13'\n        },\n        21: {\n          title: '歌单21'\n        },\n        31: {\n          title: '歌单31'\n        },\n        5: {\n          title: '歌单5'\n        },\n        11: {\n          title: '歌单11'\n        },\n        10: {\n          title: '歌单10'\n        },\n        6: {\n          title: '歌单6'\n        },\n        7: {\n          title: '歌单7'\n        },\n        3: {\n          title: '歌单3'\n        },\n        14: {\n          title: '歌单14'\n        }\n      };\n      this.songRankings = averageScores.map((item, index) => {\n        const songListId = item.songListId;\n        const title = songListDetails[songListId].title;\n        const score = item.score.toFixed(1);\n        return {\n          title,\n          score\n        };\n      });\n    },\n    updateScore(songListId, newScore) {\n      // 找到要更新的歌单项并更新评分\n      const updatedIndex = this.rankList.findIndex(item => item[1] === songListId);\n      if (updatedIndex !== -1) {\n        this.rankList[updatedIndex][3] = newScore;\n        // 重新计算歌单评分排行榜\n        this.calculateRankings();\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","rankList","songRankings","mounted","calculateRankings","methods","averageScores","map","item","songListId","score","sort","a","b","songListDetails","title","index","toFixed","updateScore","newScore","updatedIndex","findIndex"],"sources":["E:\\javaideaiu\\class22\\mic\\music-client\\src\\views\\paihangbang.vue"],"sourcesContent":["<template>\r\n    <div class=\"rankings\" style=\"text-align: center;\">\r\n        <h1>歌单评分排行榜</h1>\r\n        <ul>\r\n            <li v-for=\"(item, index) in songRankings\" :key=\"item.title\"\r\n                style=\"display: flex; justify-content: space-between;\">\r\n                <span>{{ index + 1 }}</span>\r\n                <span>{{ item.title }}</span>\r\n                <span>{{ item.score }}</span>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            rankList: [\r\n                [1, 2, 1, 7],\r\n                [2, 2, 2, 3],\r\n                [3, 1, 1, 4],\r\n                [7, 13, 1, 5],\r\n                [19, 21, 1, 5],\r\n                [20, 31, 1, 5],\r\n                [21, 5, 1, 0],\r\n                [24, 11, 1, 4],\r\n                [25, 10, 1, 10],\r\n                [27, 6, 1, 6],\r\n                [28, 7, 1, 10],\r\n                [29, 1, 26, 4],\r\n                [30, 7, 26, 2],\r\n                [32, 3, 26, 5],\r\n                [33, 14, 26, 9],\r\n            ],\r\n            songRankings: [],\r\n        };\r\n    },\r\n    mounted() {\r\n        this.calculateRankings();\r\n    },\r\n    methods: {\r\n        calculateRankings() {\r\n            const averageScores = this.rankList.map((item) => {\r\n                const songListId = item[1];\r\n                const score = item[3];\r\n                return { songListId, score };\r\n            });\r\n\r\n            averageScores.sort((a, b) => b.score - a.score);\r\n\r\n            const songListDetails = {\r\n                2: { title: '歌单2' },\r\n                1: { title: '歌单1' },\r\n                13: { title: '歌单13' },\r\n                21: { title: '歌单21' },\r\n                31: { title: '歌单31' },\r\n                5: { title: '歌单5' },\r\n                11: { title: '歌单11' },\r\n                10: { title: '歌单10' },\r\n                6: { title: '歌单6' },\r\n                7: { title: '歌单7' },\r\n                3: { title: '歌单3' },\r\n                14: { title: '歌单14' },\r\n            };\r\n\r\n            this.songRankings = averageScores.map((item, index) => {\r\n                const songListId = item.songListId;\r\n                const title = songListDetails[songListId].title;\r\n                const score = item.score.toFixed(1);\r\n                return { title, score };\r\n            });\r\n        },\r\n        updateScore(songListId, newScore) {\r\n            // 找到要更新的歌单项并更新评分\r\n            const updatedIndex = this.rankList.findIndex((item) => item[1] === songListId);\r\n            if (updatedIndex !== -1) {\r\n                this.rankList[updatedIndex][3] = newScore;\r\n                // 重新计算歌单评分排行榜\r\n                this.calculateRankings();\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n  \r\n<style>\r\n/* 无样式 */\r\n</style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}