{"ast":null,"code":"export default {\n  data() {\n    return {\n      songLists: []\n    };\n  },\n  mounted() {\n    this.getRankings();\n  },\n  methods: {\n    async getRankings() {\n      try {\n        const response = await this.$api.getRankOfSongListId();\n        this.songLists = response.data;\n        this.calculateAverageRank();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    calculateAverageRank() {\n      for (let songList of this.songLists) {\n        let totalRank = 0;\n        for (let rank of songList.ranks) {\n          totalRank += rank.score;\n        }\n        songList.averageRank = totalRank / songList.ranks.length;\n      }\n      this.songLists.sort((a, b) => b.averageRank - a.averageRank);\n    }\n  }\n};","map":{"version":3,"names":["data","songLists","mounted","getRankings","methods","response","$api","getRankOfSongListId","calculateAverageRank","error","console","songList","totalRank","rank","ranks","score","averageRank","length","sort","a","b"],"sources":["E:\\javaideaiu\\class22\\mic\\music-client\\src\\views\\song-sheet\\paihangbang.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>歌单评分排行榜</h1>\r\n    <ul>\r\n      <li v-for=\"songList in songLists\" :key=\"songList.id\">\r\n        <span>{{ songList.name }}</span>\r\n        <span>{{ songList.averageRank }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      songLists: []\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getRankings();\r\n  },\r\n  methods: {\r\n    async getRankings() {\r\n      try {\r\n        const response = await this.$api.getRankOfSongListId();\r\n        this.songLists = response.data;\r\n        this.calculateAverageRank();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    calculateAverageRank() {\r\n      for (let songList of this.songLists) {\r\n        let totalRank = 0;\r\n        for (let rank of songList.ranks) {\r\n          totalRank += rank.score;\r\n        }\r\n        songList.averageRank = totalRank / songList.ranks.length;\r\n      }\r\n      this.songLists.sort((a, b) => b.averageRank - a.averageRank);\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AAaA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAME,QAAO,GAAI,MAAM,IAAI,CAACC,IAAI,CAACC,mBAAmB,CAAC,CAAC;QACtD,IAAI,CAACN,SAAQ,GAAII,QAAQ,CAACL,IAAI;QAC9B,IAAI,CAACQ,oBAAoB,CAAC,CAAC;MAC7B,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDD,oBAAoBA,CAAA,EAAG;MACrB,KAAK,IAAIG,QAAO,IAAK,IAAI,CAACV,SAAS,EAAE;QACnC,IAAIW,SAAQ,GAAI,CAAC;QACjB,KAAK,IAAIC,IAAG,IAAKF,QAAQ,CAACG,KAAK,EAAE;UAC/BF,SAAQ,IAAKC,IAAI,CAACE,KAAK;QACzB;QACAJ,QAAQ,CAACK,WAAU,GAAIJ,SAAQ,GAAID,QAAQ,CAACG,KAAK,CAACG,MAAM;MAC1D;MACA,IAAI,CAAChB,SAAS,CAACiB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACJ,WAAU,GAAIG,CAAC,CAACH,WAAW,CAAC;IAC9D;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}