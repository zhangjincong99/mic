{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { HttpManager } from \"@/api\";\nexport default {\n  data() {\n    return {\n      rankingList: []\n    };\n  },\n  async created() {\n    await this.getRankingList();\n  },\n  methods: {\n    // 获取歌单评分排行榜\n    async getRankingList() {\n      const songListData = await HttpManager.getSongList();\n      const rankingList = [];\n      for (const songList of songListData) {\n        const rankData = await HttpManager.getRankOfSongListId(songList.id);\n        const averageScore = this.calculateAverageScore(rankData);\n        rankingList.push({\n          songListId: songList.id,\n          title: songList.title,\n          averageScore\n        });\n      }\n\n      // 根据平均评分进行排序\n      rankingList.sort((a, b) => b.averageScore - a.averageScore);\n      this.rankingList = rankingList;\n    },\n    // 计算平均评分\n    calculateAverageScore(rankData) {\n      let sum = 0;\n      for (const rank of rankData) {\n        sum += rank.score;\n      }\n      return sum / rankData.length;\n    }\n  }\n};","map":{"version":3,"names":["HttpManager","data","rankingList","created","getRankingList","methods","songListData","getSongList","songList","rankData","getRankOfSongListId","id","averageScore","calculateAverageScore","push","songListId","title","sort","a","b","sum","rank","score","length"],"sources":["E:\\javaideaiu\\class22\\mic\\music-client\\src\\views\\song-sheet\\paihangbang.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>歌单评分排行榜</h1>\r\n    <ul>\r\n      <li v-for=\"(item, index) in rankingList\" :key=\"item.songListId\">\r\n        Rank {{ index + 1 }}: {{ item.title }}, Average Score: {{ item.averageScore }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { HttpManager } from \"@/api\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      rankingList: [],\r\n    };\r\n  },\r\n  async created() {\r\n    await this.getRankingList();\r\n  },\r\n  methods: {\r\n    // 获取歌单评分排行榜\r\n    async getRankingList() {\r\n      const songListData = await HttpManager.getSongList();\r\n      const rankingList = [];\r\n\r\n      for (const songList of songListData) {\r\n        const rankData = await HttpManager.getRankOfSongListId(songList.id);\r\n        const averageScore = this.calculateAverageScore(rankData);\r\n        rankingList.push({ songListId: songList.id, title: songList.title, averageScore });\r\n      }\r\n\r\n      // 根据平均评分进行排序\r\n      rankingList.sort((a, b) => b.averageScore - a.averageScore);\r\n\r\n      this.rankingList = rankingList;\r\n    },\r\n    // 计算平均评分\r\n    calculateAverageScore(rankData) {\r\n      let sum = 0;\r\n      for (const rank of rankData) {\r\n        sum += rank.score;\r\n      }\r\n      return sum / rankData.length;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AAYA,SAASA,WAAU,QAAS,OAAO;AAEnC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;EAC7B,CAAC;EACDC,OAAO,EAAE;IACP;IACA,MAAMD,cAAcA,CAAA,EAAG;MACrB,MAAME,YAAW,GAAI,MAAMN,WAAW,CAACO,WAAW,CAAC,CAAC;MACpD,MAAML,WAAU,GAAI,EAAE;MAEtB,KAAK,MAAMM,QAAO,IAAKF,YAAY,EAAE;QACnC,MAAMG,QAAO,GAAI,MAAMT,WAAW,CAACU,mBAAmB,CAACF,QAAQ,CAACG,EAAE,CAAC;QACnE,MAAMC,YAAW,GAAI,IAAI,CAACC,qBAAqB,CAACJ,QAAQ,CAAC;QACzDP,WAAW,CAACY,IAAI,CAAC;UAAEC,UAAU,EAAEP,QAAQ,CAACG,EAAE;UAAEK,KAAK,EAAER,QAAQ,CAACQ,KAAK;UAAEJ;QAAa,CAAC,CAAC;MACpF;;MAEA;MACAV,WAAW,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACP,YAAW,GAAIM,CAAC,CAACN,YAAY,CAAC;MAE3D,IAAI,CAACV,WAAU,GAAIA,WAAW;IAChC,CAAC;IACD;IACAW,qBAAqBA,CAACJ,QAAQ,EAAE;MAC9B,IAAIW,GAAE,GAAI,CAAC;MACX,KAAK,MAAMC,IAAG,IAAKZ,QAAQ,EAAE;QAC3BW,GAAE,IAAKC,IAAI,CAACC,KAAK;MACnB;MACA,OAAOF,GAAE,GAAIX,QAAQ,CAACc,MAAM;IAC9B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}