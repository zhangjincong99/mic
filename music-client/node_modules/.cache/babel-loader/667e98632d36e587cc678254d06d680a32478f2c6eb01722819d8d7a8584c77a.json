{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"歌曲列表\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"歌曲评分\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_rate = _resolveComponent(\"el-rate\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.songs, (song, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(song.title), 1 /* TEXT */), _createElementVNode(\"div\", null, [_hoisted_2, _createVNode(_component_el_rate, {\n      modelValue: song.rank,\n      \"onUpdate:modelValue\": $event => song.rank = $event,\n      \"allow-half\": \"\",\n      disabled: \"\"\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createElementVNode(\"span\", null, _toDisplayString(song.rank * 2), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_createElementVNode(\"h4\", null, _toDisplayString(song.assistText) + \" \" + _toDisplayString(song.score * 2), 1 /* TEXT */), _createVNode(_component_el_rate, {\n      \"allow-half\": \"\",\n      modelValue: song.score,\n      \"onUpdate:modelValue\": $event => song.score = $event,\n      disabled: song.disabledRank,\n      onClick: $event => $options.pushValue(index)\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"disabled\", \"onClick\"])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","songs","song","index","key","_toDisplayString","title","_hoisted_2","_createVNode","_component_el_rate","rank","$event","disabled","assistText","score","disabledRank","onClick","$options","pushValue"],"sources":["E:\\javaideaiu\\class22\\mic\\music-client\\src\\views\\paihangbang.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>歌曲列表</h1>\r\n    <ul>\r\n      <li v-for=\"(song, index) in songs\" :key=\"index\">\r\n        <h3>{{ song.title }}</h3>\r\n        <div>\r\n          <h4>歌曲评分</h4>\r\n          <el-rate v-model=\"song.rank\" allow-half disabled></el-rate>\r\n          <span>{{ song.rank * 2 }}</span>\r\n        </div>\r\n        <div>\r\n          <h4>{{ song.assistText }} {{ song.score * 2 }}</h4>\r\n          <el-rate allow-half v-model=\"song.score\" :disabled=\"song.disabledRank\" @click=\"pushValue(index)\"></el-rate>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { HttpManager } from \"@/api\";\r\n\r\nexport default {\r\n  name: \"SongList\",\r\n  data() {\r\n    return {\r\n      songs: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async getSongList() {\r\n      // 模拟获取歌曲列表\r\n      const songList = await HttpManager.getSongList();\r\n      this.songs = songList.data.map((song) => ({\r\n        ...song,\r\n        rank: 0,\r\n        score: 0,\r\n        disabledRank: false,\r\n        assistText: \"评价\",\r\n      }));\r\n    },\r\n    async pushValue(index) {\r\n      const song = this.songs[index];\r\n      if (song.disabledRank) return;\r\n\r\n      const params = new URLSearchParams();\r\n      params.append(\"songId\", song.id);\r\n      params.append(\"score\", (song.score * 2).toString());\r\n\r\n      try {\r\n        const result = await HttpManager.setRank(params);\r\n        // 处理结果\r\n        if (result.success) {\r\n          song.rank = await HttpManager.getRankOfSongId(song.id) / 2;\r\n          song.disabledRank = true;\r\n          song.assistText = \"已评价\";\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n  async mounted() {\r\n    await this.getSongList();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* 样式省略，根据需要自行添加样式 */\r\n</style>\r\n"],"mappings":";gCAEIA,mBAAA,CAAa,YAAT,MAAI;gCAKFA,mBAAA,CAAa,YAAT,MAAI;;;;uBANhBC,mBAAA,CAgBM,cAfJC,UAAa,EACbF,mBAAA,CAaK,c,kBAZHC,mBAAA,CAWKE,SAAA,QAAAC,WAAA,CAXuBC,KAAA,CAAAC,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBAAvBP,mBAAA,CAWK;MAX+BQ,GAAG,EAAED;IAAK,IAC5CR,mBAAA,CAAyB,YAAAU,gBAAA,CAAlBH,IAAI,CAACI,KAAK,kBACjBX,mBAAA,CAIM,cAHJY,UAAa,EACbC,YAAA,CAA2DC,kBAAA;kBAAzCP,IAAI,CAACQ,IAAI;uCAATR,IAAI,CAACQ,IAAI,GAAAC,MAAA;MAAE,YAAU,EAAV,EAAU;MAACC,QAAQ,EAAR;oEACxCjB,mBAAA,CAAgC,cAAAU,gBAAA,CAAvBH,IAAI,CAACQ,IAAI,qB,GAEpBf,mBAAA,CAGM,cAFJA,mBAAA,CAAmD,YAAAU,gBAAA,CAA5CH,IAAI,CAACW,UAAU,IAAG,GAAC,GAAAR,gBAAA,CAAGH,IAAI,CAACY,KAAK,sBACvCN,YAAA,CAA2GC,kBAAA;MAAlG,YAAU,EAAV,EAAU;kBAAUP,IAAI,CAACY,KAAK;uCAAVZ,IAAI,CAACY,KAAK,GAAAH,MAAA;MAAGC,QAAQ,EAAEV,IAAI,CAACa,YAAY;MAAGC,OAAK,EAAAL,MAAA,IAAEM,QAAA,CAAAC,SAAS,CAACf,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}