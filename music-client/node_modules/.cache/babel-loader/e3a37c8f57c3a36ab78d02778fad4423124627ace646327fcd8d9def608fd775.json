{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"评分排行榜\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 在模板中显示评分排行榜 \"), _createElementVNode(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.rankList, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.songListId\n    }, [_createElementVNode(\"span\", null, _toDisplayString(item.songListName), 1 /* TEXT */), _createElementVNode(\"span\", null, \"评分：\" + _toDisplayString(item.rank), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createCommentVNode","_hoisted_1","_createElementBlock","_Fragment","_renderList","$data","rankList","item","key","songListId","_toDisplayString","songListName","rank"],"sources":["E:\\javaideaiu\\class22\\mic\\music-client\\src\\views\\song-sheet\\paihangbang.vue"],"sourcesContent":["<template>\r\n  <!-- 在模板中显示评分排行榜 -->\r\n  <div>\r\n    <h2>评分排行榜</h2>\r\n    <ul>\r\n      <li v-for=\"item in rankList\" :key=\"item.songListId\">\r\n        <span>{{ item.songListName }}</span>\r\n        <span>评分：{{ item.rank }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      rankList: [] // 存储评分排行榜数据\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getRankList(); // 在组件挂载后获取评分排行榜数据\r\n  },\r\n  methods: {\r\n    async getRankList() {\r\n      // 调用 API 获取全部歌单\r\n      const songListResponse = await axios.get(`/songList`);\r\n      const songList = songListResponse.data;\r\n\r\n      // 遍历歌单，获取评分并排序\r\n      const rankList = [];\r\n      for (const song of songList) {\r\n        const rankResponse = await axios.get(`/rankList?songListId=${song.songListId}`);\r\n        const rank = rankResponse.data;\r\n\r\n        rankList.push({\r\n          songListId: song.songListId,\r\n          songListName: song.songListName,\r\n          rank: rank\r\n        });\r\n      }\r\n\r\n      // 根据评分排序\r\n      rankList.sort((a, b) => b.rank - a.rank);\r\n\r\n      // 更新组件的 rankList 数据\r\n      this.rankList = rankList;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";gCAGIA,mBAAA,CAAc,YAAV,OAAK;;;6DAFXC,mBAAA,iBAAoB,EACpBD,mBAAA,CAQM,cAPJE,UAAc,EACdF,mBAAA,CAKK,c,kBAJHG,mBAAA,CAGKC,SAAA,QAAAC,WAAA,CAHcC,KAAA,CAAAC,QAAQ,EAAhBC,IAAI;yBAAfL,mBAAA,CAGK;MAHyBM,GAAG,EAAED,IAAI,CAACE;QACtCV,mBAAA,CAAoC,cAAAW,gBAAA,CAA3BH,IAAI,CAACI,YAAY,kBAC1BZ,mBAAA,CAA+B,cAAzB,KAAG,GAAAW,gBAAA,CAAGH,IAAI,CAACK,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}